PROJE 1
1. [22 | 27,16,2,18,6] - 22 elemanı sıralı, diğerleri kontrol edilecek.
2. [22,27 | 16,2,18,6] - 27, 22'den büyük olduğu için yer değiştirmeye gerek yok.
3. [16,22,27 | 2,18,6] - 16, 22 ve 27 ile karşılaştırılır ve uygun yere yerleştirilir.
4. [2,16,22,27 | 18,6] - 2, tüm elemanlarla karşılaştırılır ve en başa yerleştirilir.
5. [2,16,18,22,27 | 6] - 18, 22 ve 27 ile karşılaştırılır ve 16'nın yanına yerleştirilir.
6. [2,6,16,18,22,27] - 6, 18, 22 ve 27 ile karşılaştırılır ve 16'nın yanına yerleştirilir.

Sonuç olarak 18 saysı average case kapsamına girer.


[7,3,5,8,2,9,4,15,6] dizisinin Selection Sort'a göre ilk 4 adımını yazınız.
Adım:
En küçük eleman 2 bulunur ve dizinin ilk elemanı olan 7 ile yer değiştirilir.
Yeni dizi: [2,3,5,8,7,9,4,15,6]
Adım:
Sıralanmamış alt dizideki en küçük eleman 3 (zaten doğru yerde) bulunur ve ikinci eleman ile yer değiştirilmez.
Yeni dizi: [2,3,5,8,7,9,4,15,6]
Adım:
Sıralanmamış alt dizideki en küçük eleman 4 bulunur ve üçüncü eleman olan 5 ile yer değiştirilir.
Yeni dizi: [2,3,4,8,7,9,5,15,6]
Adım:
Sıralanmamış alt dizideki en küçük eleman 5 bulunur ve dördüncü eleman olan 8 ile yer değiştirilir.
Yeni dizi: [2,3,4,5,7,9,8,15,6]
Bu adımlar, dizinin tamamen sıralanana kadar devam eder.


PROJE 2
[16,21,11,8,12,22] -> Merge Sort

Yukarıdaki dizinin sort türüne göre aşamalarını yazınız.
Big-O gösterimini yazınız.

Diziyi yarıya böl:
[16,21,11] ve [8,12,22]
Her iki yarıyı kendi içinde sırala:
[11,16,21] ve [8,12,22]
Sıralanmış yarıları birleştir:
İlk elemanları karşılaştır: 11 ve 8
Daha küçük olan 8 yeni dizide ilk sıraya yerleşir.
Yeni dizi: [8]
Sonraki elemanları karşılaştır: 11 ve 12
Daha küçük olan 11 yeni dizide sonraki sıraya yerleşir.
Yeni dizi: [8,11]
Bu işlem tüm elemanlar karşılaştırılıp yeni diziye yerleştirilene kadar devam eder.
Sonuç: [8,11,12,16,21,22]
Merge Sort’un Big-O gösterimi genellikle O(n log n) olarak ifade edilir. 
Burada n, dizinin eleman sayısını temsil eder. 
Merge Sort, en kötü, en iyi ve ortalama durumlar için de bu zaman karmaşıklığına sahiptir.

PROJE 3 
*7 sayısını kök olarak alın.
*5 sayısını ekleyin, 7’den küçük olduğu için sol tarafa:
    7
   /
  5
*1 sayısını ekleyin, 7 ve 5’ten küçük olduğu için solun soluna:
    7
   /
  5
 /
1
*8 sayısını ekleyin, 7’den büyük olduğu için sağ tarafa:
    7
   / \
  5   8
 /
1

*3 sayısını ekleyin, 7 ve 5’ten küçük, 1’den büyük olduğu için 1’in sağ tarafına:
    7
   / \
  5   8
 /
1
 \
  3

*6 sayısını ekleyin, 7’den küçük, 5’ten büyük olduğu için 5’in sağ tarafına:
    7
   / \
  5   8
 / \
1   6
 \
  3

*0 sayısını ekleyin, 7, 5 ve 1’den küçük olduğu için 1’in sol tarafına:
      7
   / \
  5   8
 / \
1   6
 /0 3

8. **9** sayısını ekleyin, 7 ve 8'den büyük olduğu için 8'in sağ tarafına:

   7
  / \
 5   8
/ \   \

1 6 9 /
0 3

9. **4** sayısını ekleyin, 7 ve 5'ten küçük, 1'den büyük, 3'ten büyük olduğu için 3'ün sağ tarafına:

   7
  / \
 5   8
/ \   \

1 6 9 /
0 3
4

10. **2** sayısını ekleyin, 7 ve 5'ten küçük, 1'den büyük, 3'ten küçük olduğu için 3'ün sol tarafına:
 ```
    7
   / \
  5   8
 / \   \
1   6   9
/ \
0   3
 / \
2   4

